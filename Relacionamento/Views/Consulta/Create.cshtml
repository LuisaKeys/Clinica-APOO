@model Relacionamento.Models.ViewModels.ConsultaViewModel
@using Relacionamento.Models.ViewModels;

@{
    ViewBag.Title = "Create";
}

<h2>Create</h2>

@using (Html.BeginForm())
{
    @Html.ValidationSummary(true)

<fieldset>
    <h4>Consulta</h4>
    <hr />
    <div class="form-group">
        @Html.LabelFor(model => model.data_hora, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.data_hora, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.data_hora, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Sintomas, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Sintomas, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Sintomas, "", new { @class = "text-danger" })
        </div>
    </div>
    <div class="form-group">
        @Html.LabelFor(model => model.PetId, htmlAttributes:
             new { @class = "control-label col-md-3" })
        <div class="col-md-9">
            @Html.DropDownList("PetId", null, htmlAttributes:
                 new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.PetId, "",
                 new { @class = "text-danger" })
        </div>
    </div>
    <div class="form-group">
        @Html.LabelFor(model => model.VeterinarioId, htmlAttributes:
             new { @class = "control-label col-md-3" })
        <div class="col-md-9">
            @Html.DropDownList("VeterinarioId", null, htmlAttributes:
                 new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.VeterinarioId, "",
                 new { @class = "text-danger" })
        </div>
    </div>
    <div class="form-group col-md-10">
        @Html.EditorFor(x => x.Exames)
    </div>

    <p>
        <input type="submit" value="Create" class="btn btn-info" />
    </p>
</fieldset>
}

@*<input type="submit" class="btn btn-block"/>
<input type="submit" class="btn btn-primary" />
<input type="submit" class="btn btn-success" />
<input type="submit" class="btn btn-warning" />
<input type="submit" class="btn btn-danger" />
<input type="submit" class="btn btn-danger btn-group-lg"/>
<input type="submit" class="btn btn-danger btn-lg" />
<input type="submit" class="btn btn-danger btn-sm" />*@

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}


@*<script>$(document).ready(function () {


            $("#btnAddExame").click(function () {
                //Váriavel para checar se já existe na lista
                var chkRptExame = false;

                $('#lstExame li').each(function () {
                    haveSomeLi = true;
                    var current = $(this).text();
                    if (current == $("#Exames option:selected").text()) {
                        chkRptExame = true;
                    }
                });

                if (!chkRptExame) {
                    $("#lstExame").append("<li>" + $("#Exames option:selected").text() + "<input type='checkbox' name='chkExames' id='chkExames' class='chkExames' checked='checked' value='" + $("#Exames option:selected").val() + "'></li>");
                } else {
                    alert("Exame Já inserido!");
                }
            });


            $('#lstExame').on('click', "li", function () {
                $(this).remove();
                //alert();
                return false;
            });
        });</script>

    <style>
        .chkExames {
            display: none;
        }

        #lstExame li {
            cursor: pointer;
        }
    </style>


    <h2>Create</h2>


    @using (Html.BeginForm())
    {
        @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>Consulta</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.data_hora, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.data_hora, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.data_hora, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Sintomas, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Sintomas, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Sintomas, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Exames, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(m => m.Exames, new SelectList(ViewBag.Exames, "Id", "Descricao"), new { @class = "form-control" })
                <button type="button" class="btn btn-info" id="btnAddExame">Add</button>
            </div>
        </div>
        <ul id="lstExame"></ul>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Create" class="btn btn-default" />
            </div>
        </div>
    </div>
    }

    <div>
        @Html.ActionLink("Back to List", "Index")
    </div>

    @section Scripts {
        @Scripts.Render("~/bundles/jqueryval")
    }*@
